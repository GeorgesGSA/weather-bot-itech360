{
  "name": "[1 Agente de Clima e Tempo] - [ITECH360]",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem }}",
        "options": {
          "systemMessage": "=# Função\nVocê é um assistente conversacional focado em **clima e previsão do tempo**. Seu objetivo é interagir com o usuário de forma amigável e acionar ferramentas específicas quando necessário.\n\n---\n\n## Objetivo\nIdentificar quando o usuário deseja informações sobre o clima e **acionar a ferramenta 'Pesquisa de tempo'**, passando o nome da cidade como parâmetro.\n\n---\n\n## Comportamento Esperado\n\n1. Quando o usuário pedir a previsão do tempo:\n   - Chame a ferramenta 'Pesquisa de tempo' com o campo 'query'.\n   - Receba a respota da ferramenta e melhore o texto com as informações recebidas.\n\n2. Caso o pedido **não** esteja relacionado ao clima:\n   - Responda com gentileza que você está focado apenas em fornecer informações sobre o clima no momento.\n\n3. Ao responder:\n   - Use um **tom informal, simpático e direto**, como se fosse em um chat de WhatsApp.\n   - **Não invente dados meteorológicos.** Toda informação deve vir da ferramenta.\n\n---\n\n## Exemplos de entrada que devem acionar 'Pesquisa de tempo':\n- “Como está o tempo em Santos?”\n- “Está chovendo em Curitiba?”\n- “Clima em Porto Alegre”\n- “Vai fazer calor hoje em Salvador?”\n\n---\n\n## Caso necessário, pergunte:\n- “Você quer saber o clima de qual cidade?”\n- “Qual cidade deseja consultar?”\n\n---\n\n## Regras importantes\n\n- Não tente responder previsões com base em suposições.\n- Nunca diga que “não sabe” antes de tentar a ferramenta.\n- Priorize agilidade e clareza.\n- Se a cidade for composta (ex: “São José dos Campos”), repasse exatamente ao 'Pesquisa de tempo'.\n\n---\n\n# Estilo de linguagem\n\n- Natural e humano.\n- Pode usar emojis.\n- Frases curtas e objetivas.\n- Forneça informações detalhadas e **se tem risco de chuva**.\n\n---\n\n## Lembrete final\n\nSeu papel é ser um agente inteligente que entende o pedido, usa as ferramentas corretas e responde como um bom atendente digital. Sempre entregue valor real e mensagens simpáticas.\n\nApós entregar a previsão, **pergunte ao usuário se ele deseja se inscrever para receber alertas automáticos** sobre mudanças drásticas no clima da cidade consultada (como tempestades ou calor intenso)e explique a importância disso. Aguarde a resposta “SIM” ou “NÃO” antes de seguir e **somente aceite esses dois tipos de resposta**.\n\n## Instruções de inscrição\n\n- Caso o usuário diga SIM, na resposta sobre a inscrição dele **deve conter a palavra 'inscrito'**.\n- Caso ele diga que NÃO, diga que tudo bem e que você estará pronto para novas dúvidas de tempo.\n\n# IMPORTANTE e **Obrigatório**: DEVOLVER 2 OUTPUTS QUE SAEM DA TOOL \"Pesquisa de tempo\". \n- content\n- cidade\n",
          "returnIntermediateSteps": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        140,
        0
      ],
      "id": "6c702e1e-7480-42df-9984-a30b928952fd",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        220
      ],
      "id": "891d0d54-d91d-4da5-8719-1311390ef273",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "FwnFjJHQIPeJjkC0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolWikipedia",
      "typeVersion": 1,
      "position": [
        480,
        220
      ],
      "id": "7147da3b-7afa-44d7-84ee-837f84921fb0",
      "name": "Wikipedia"
    },
    {
      "parameters": {
        "description": "Chame essa tool para acessar informações sobre clima e tempo atuais.",
        "workflowId": {
          "__rl": true,
          "value": "2cPORvvSYCr0Pspo",
          "mode": "list",
          "cachedResultName": "[Sub_Workflow] - [Get_Weather]"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        660,
        220
      ],
      "id": "0ebbd48d-0841-4da5-ae1f-730f6772a662",
      "name": "Pesquisa de tempo"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "fc9c6e55-80a7-49cc-9c0c-717c59cb71d6",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -460,
        0
      ],
      "id": "b0b75ea8-a065-473d-bb82-c6406156e96a",
      "name": "Webhook",
      "webhookId": "fc9c6e55-80a7-49cc-9c0c-717c59cb71d6"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "gsa1",
        "remoteJid": "={{ $('Dados do Cliente').first().json.id_whatsapp }}",
        "messageText": "={{ $json['output.mensagens'] }}",
        "options_message": {
          "delay": 2000
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2800,
        180
      ],
      "id": "a5fbcc48-e8af-4de4-9836-0f13b67df671",
      "name": "Enviar texto",
      "credentials": {
        "evolutionApi": {
          "id": "aIb9imEYfXzvHICn",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Agente de IA\nAgente inteligente com memória e acesso aos dados.",
        "height": 580,
        "width": 820,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        -180
      ],
      "id": "c1d98f2d-402a-4b36-96a2-bf64de0db515",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n### Tool Bonus",
        "height": 200,
        "width": 150,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        180
      ],
      "typeVersion": 1,
      "id": "f3fa8ce2-fc04-43d4-9368-b3c520fa239c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Humanizar Resposta\nQuebra de mensagens em mensagens menores e com contexto.",
        "height": 660,
        "width": 580,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1780,
        -180
      ],
      "id": "c0e8a594-4cba-4957-8922-724c1dae23a8",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.mensagens",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2180,
        -20
      ],
      "id": "ce4f90fe-2598-4ca3-9900-58c23d5741bd",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        1960,
        160
      ],
      "id": "b8495b71-7aa3-4153-85a6-9e6094e47593",
      "name": "Auto-fixing Output Parser1"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"mensagens\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"mensagens\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2160,
        320
      ],
      "id": "68aea300-5325-485c-9462-441f26ce52fd",
      "name": "Structured Output Parser [Schema]"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<mensagem_do_usuario>\n{{ $('AI Agent').item.json.output }}\n</mensagem_do_usuario>",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Apenas estruture a <mensagem_do_usuario> no formato JSON solicitado no output parser e seguindo as instruções de formatação abaixo. Não altere nada mais na mensagem\n\n# Formatação\n- Divida as mensagens para que fiquem naturais e humanizadas;\n- Divida as mensagens conforme estrutura do output parser para que não fiquem muito longas (maiores que 240 caractéres);\n- Não separe mensagens vazias;\n- Use quebras de linhas (\\n\\n) após pontos finais;\n- Para negrito (bold) use apenas um '' nunca duas '' (exemplo: *negrito).\n\nExemplo de formato JSON:\n{\n\"mensagens\": [\"Mensagem 0\", \"Mensagem 1\", \"Mensagem 2\"]\n}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        1860,
        -20
      ],
      "id": "6e0c1d44-ecf3-4156-b5ce-6e1757df56bf",
      "name": "Basic LLM Chain",
      "executeOnce": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1880,
        320
      ],
      "id": "1fcb9e4b-a4ef-4445-9123-4c0fd071edbe",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "FwnFjJHQIPeJjkC0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2520,
        60
      ],
      "id": "0ecc4c2a-b626-4ea4-b477-e31c8e1ec058",
      "name": "Loop Over Items1",
      "notes": "TEMPLATE POR POR GSA LABS"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2820,
        -80
      ],
      "id": "caec1106-e707-429f-8230-7a34c6bbe5d6",
      "name": "No Operation, do nothing5",
      "notes": "TEMPLATE POR POR GSA LABS"
    },
    {
      "parameters": {
        "content": "## Envio das Respostas ao Usuário\nEnvio das mensagens quebradas para o usuário",
        "height": 660,
        "width": 900,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        -180
      ],
      "id": "c88938de-f2e3-4309-9f1b-1b5c927b0a5d",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "amount": 3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3100,
        240
      ],
      "id": "12e6e346-dad2-4907-bd73-34aa9bf49374",
      "name": "Wait 3sec",
      "webhookId": "e1889b6c-cff8-4647-a5e8-c13aa0355253",
      "notes": "TEMPLATE POR POR GSA LABS"
    },
    {
      "parameters": {
        "content": "## Gatilho\nChat Trigger Whatsapp",
        "height": 580,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -520,
        -180
      ],
      "id": "0dccfd64-6de8-4550-a734-b644be1f60eb",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Registro do Lead no banco de dados (Supabase)\nFluxo para adição do lead no banco de dados postgrees supabase.",
        "height": 580,
        "width": 900,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        860,
        -180
      ],
      "id": "1165c0e6-0903-4b3a-aa9a-d3377dff5ec4",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8dcb8dbe-9614-43bf-b705-fec89be54412",
              "name": "nome",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "f03f9d88-0b10-4d4e-900d-7519d715da7a",
              "name": "id_whatsapp",
              "value": "={{ $json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "429f1a6d-679b-463a-ad6d-11e6774ec768",
              "name": "mensagem",
              "value": "={{ $json.body.data.message.conversation }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -200,
        0
      ],
      "id": "1e2fdf3d-6bae-4cef-8b10-4bb98186d10e",
      "name": "Dados do Cliente"
    },
    {
      "parameters": {
        "content": "## Dados do Lead\nInformações principais sobre o lead.",
        "height": 580,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -260,
        -180
      ],
      "id": "d61d8240-ce50-493d-9c59-9e9da4d9de66",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "inscrito",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "66ec1de1-f39d-4846-b3eb-a01765c6d923"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "SIM"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "71bef641-694d-4852-b2d0-7a3820f7bb5c",
                    "leftValue": "={{ $json.intermediateSteps[0].action.toolInput.input }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Continua"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "52ccbb7d-6431-480c-9aa3-f02d4466ad21",
                    "leftValue": "={{ $json.intermediateSteps[0].action.toolInput.input }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "N/A"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1060,
        80
      ],
      "id": "1581ad3b-9ccf-415e-8598-51a78a3f3239",
      "name": "Switch"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.id_whatsapp }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        260,
        220
      ],
      "id": "ac048dca-11dd-4424-bf07-a184d1aff8a9",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "uIMEB8XcUh4it4mb",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "weather_subscriptions_duplicate",
          "mode": "list",
          "cachedResultName": "weather_subscriptions_duplicate"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": true,
            "phone": "={{ $('Dados do Cliente').item.json.id_whatsapp }}"
          },
          "matchingColumns": [
            "phone"
          ],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "city",
              "displayName": "city",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1260,
        -60
      ],
      "id": "8868e861-1423-4ac0-91fa-8ce46c63895d",
      "name": "Notificações TRUE",
      "executeOnce": false,
      "credentials": {
        "postgres": {
          "id": "uIMEB8XcUh4it4mb",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "weather_subscriptions_duplicate",
          "mode": "list",
          "cachedResultName": "weather_subscriptions_duplicate"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "active": false,
            "city": "={{ $json.intermediateSteps[0].action.toolInput.input }}",
            "name": "={{ $('Webhook').item.json.body.data.pushName }}",
            "phone": "={{ $('Webhook').item.json.body.data.key.remoteJid }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "city",
              "displayName": "city",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "active",
              "displayName": "active",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1260,
        200
      ],
      "id": "abeafbb8-69f7-4675-98a8-b256034cd108",
      "name": "Adiciona Lead",
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "uIMEB8XcUh4it4mb",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wikipedia": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pesquisa de tempo": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Dados do Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "Wait 3sec",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser [Schema]": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 3sec": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados do Cliente": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Notificações TRUE",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Adiciona Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Notificações TRUE": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona Lead": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f77be07d-ecde-4b12-92c8-c66ac7540926",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a979f96a743759b647b290befce47e05c1fc228ee2e6e94d5b94c0338293e689"
  },
  "id": "EX7JMGEOLk3832ZQ",
  "tags": [
    {
      "createdAt": "2025-07-09T03:24:29.505Z",
      "updatedAt": "2025-07-09T03:24:29.505Z",
      "id": "2YhR87h57pzZiSki",
      "name": "weather"
    }
  ]
}
